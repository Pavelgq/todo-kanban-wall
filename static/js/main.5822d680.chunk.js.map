{"version":3,"sources":["features/counter/actionTypes.ts","features/counter/selectors.ts","features/counter/counterReducer.ts","store.ts","components/Navbar.tsx","pages/About.tsx","components/counter/Counter.tsx","pages/Home.tsx","App.tsx","index.tsx"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","getCountValue","state","count","value","initialState","rootReducer","combineReducers","action","type","store","createStore","devToolsEnhancer","Navbar","className","to","About","history","useHistory","onClick","push","Counter","useSelector","selectors","dispatch","useDispatch","actionTypes","Home","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"+WAAaA,EAAoB,oBACpBC,EAAoB,oBCCpBC,EAAgB,SAACC,GAAD,OAAwBA,EAAMC,MAAMC,O,QCC3DC,EAAe,CACnBD,MAAO,GCCHE,EAAcC,0BAAgB,CAClCJ,MDCa,WAAuD,IAAtDD,EAAqD,uDAA7CG,EAAcG,EAA+B,uCACnE,OAAQA,EAAOC,MACb,KAAKV,EACH,OAAO,2BAAKG,GAAZ,IAAmBE,MAAOF,EAAME,MAAQ,IAC1C,KAAKJ,EACH,OAAO,2BAAKE,GAAZ,IAAmBE,MAAOF,EAAME,MAAQ,IAC1C,QACE,OAAOF,MCAEQ,EALDC,sBACZL,EACsBM,2BAAiB,K,8BCR5BC,EAAmB,kBAC9B,8BACE,sBAAKC,UAAU,gCAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,aAA1B,gCAGA,qBAAIA,UAAU,6BAAd,UACE,oBAAI,UAAQ,gBAAZ,SACE,cAAC,IAAD,CAASC,GAAG,IAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,SAAZ,8BCXGC,EAAkB,WAC7B,IAAMC,EAAUC,cAEhB,OACE,eAAC,WAAD,WACE,uCACA,kQAMA,wBACET,KAAK,SACLK,UAAU,MACV,UAAQ,iBACRK,QAAS,kBAAMF,EAAQG,KAAK,MAJ9B,yBCuCSC,EAlDW,WACxB,IAAMlB,EAAQmB,YAAYC,EAAUtB,eAC9BuB,EAAWC,cAEjB,OACE,cAAC,WAAD,UACE,qBAAKX,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,aAAhB,+BACA,2CACW,iCAASX,OAEpB,kKAKF,qBAAKW,UAAU,cAAf,SACE,sBAAKA,UAAU,QAAf,UACE,wBACEA,UAAU,wCACVL,KAAK,SACL,UAAQ,oBACRU,QAAS,kBACPK,EAAS,CAAEf,KAAMiB,EAAY1B,qBALjC,uBAUA,wBACEc,UAAU,uCACVL,KAAK,SACL,UAAQ,oBACRU,QAAS,kBACPK,EAAS,CAAEf,KAAMiB,EAAY3B,qBALjC,sCChCH4B,EAAiB,WAC5B,OACE,eAAC,WAAD,WACE,oDACA,qNAKA,cAAC,EAAD,QCSSC,EAdO,WACpB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKd,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOe,KAAK,IAAIC,UAAWH,EAAMI,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWd,aCL1CgB,IAASC,OACP,cAAC,IAAD,CAAUvB,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFwB,SAASC,eAAe,W","file":"static/js/main.5822d680.chunk.js","sourcesContent":["export const INCREMENT_COUNTER = 'INCREMENT_COUNTER'\nexport const DECREMENT_COUNTER = 'DECREMENT_COUNTER'\n","import { SystemState } from './types'\n\nexport const getCountValue = (state: SystemState) => state.count.value\n","import { INCREMENT_COUNTER, DECREMENT_COUNTER } from './actionTypes'\nimport { CounterActionTypes } from './types'\n\nconst initialState = {\n  value: 0,\n}\n\nexport default (state = initialState, action: CounterActionTypes) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return { ...state, value: state.value + 1 }\n    case DECREMENT_COUNTER:\n      return { ...state, value: state.value - 1 }\n    default:\n      return state\n  }\n}\n","import { combineReducers, createStore } from 'redux'\nimport { devToolsEnhancer } from 'redux-devtools-extension'\nimport { CounterReducer } from './features/counter'\n\n/* Create root reducer, containing all features of the application */\nconst rootReducer = combineReducers({\n  count: CounterReducer,\n})\n\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ devToolsEnhancer({})\n)\n\nexport default store\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport const Navbar: React.FC = () => (\n  <nav>\n    <div className=\"nav-wrapper cyan darken-1 px1\">\n      <NavLink to=\"/\" className=\"brand-logo\">\n        Redux + TypeScript\n      </NavLink>\n      <ul className=\"right hide-on-med-and-down\">\n        <li cy-data=\"home-nav-link\">\n          <NavLink to=\"/\">Home</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">About</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n)\n","import React, { Fragment } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport const About: React.FC = () => {\n  const history = useHistory()\n\n  return (\n    <Fragment>\n      <h1>About</h1>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas\n        possimus doloribus error cumque autem asperiores, ullam deserunt quidem\n        omnis doloremque itaque eius eaque sint facilis unde tenetur reiciendis\n        aliquam soluta?\n      </p>\n      <button\n        type=\"button\"\n        className=\"btn\"\n        cy-data=\"go-back-button\"\n        onClick={() => history.push('/')}\n      >\n        Go back\n      </button>\n    </Fragment>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { actionTypes, selectors } from '../../features/counter'\n\nconst Counter: React.FC = () => {\n  const count = useSelector(selectors.getCountValue)\n  const dispatch = useDispatch()\n\n  return (\n    <Fragment>\n      <div className=\"row\">\n        <div className=\"col s12 m6\">\n          <div className=\"card blue-grey darken-1\">\n            <div className=\"card-content white-text\">\n              <span className=\"card-title\">Counter component</span>\n              <h4>\n                Counter: <strong>{count}</strong>\n              </h4>\n              <p>\n                Here you can increment and decrement counter value using buttons\n                below. All the state updates are performed via redux actions.\n              </p>\n            </div>\n            <div className=\"card-action\">\n              <div className=\"group\">\n                <button\n                  className=\"waves-effect waves-teal btn-flat blue\"\n                  type=\"button\"\n                  data-qa=\"decrement-counter\"\n                  onClick={() =>\n                    dispatch({ type: actionTypes.DECREMENT_COUNTER })\n                  }\n                >\n                  decrement\n                </button>\n                <button\n                  className=\"waves-effect waves-teal btn-flat red\"\n                  type=\"button\"\n                  data-qa=\"increment-counter\"\n                  onClick={() =>\n                    dispatch({ type: actionTypes.INCREMENT_COUNTER })\n                  }\n                >\n                  increment\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Counter\n","import React, { Fragment } from 'react'\nimport Counter from '../components/counter/Counter'\n\nexport const Home: React.FC = () => {\n  return (\n    <Fragment>\n      <h1>Redux + TypeScript</h1>\n      <p>\n        Hello and welcome! :) This app was generated by the Create React App\n        template and bootstrapped with Redux, React Router, TypeScript, ESlint,\n        Prettier for you. Take a look around ;)\n      </p>\n      <Counter />\n    </Fragment>\n  )\n}\n","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport { Navbar } from './components/Navbar'\nimport { About } from './pages/About'\nimport { Home } from './pages/Home'\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/about\" component={About} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css'\n\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}